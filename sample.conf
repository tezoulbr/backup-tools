# This is backup-tools sample configuration file.
# For more info, try 'man backup-tools'.

# Print to stderr and write to log extended debug info. Default is 0.
#
DEBUG=0

# Send mail reports for each task to specified address. Default is off.
#
# MAILTO=root

# Include full log in the report? Possible values are:
#
#    0  :  not include
#    1  :  only if errors occured (default)
#    2  :  always
#
SEND_LOG=1

# Merge task logs to main log (each task have own temporary log)?
# Default is 1.
#
MERGE_LOGS=1


# All tasks receives temporary log filename as first argument ($1).
# So, writing to log is very simple:
#
#    some-command >> $1
#
# Also tasks can write to main log using log() function:
#
#    log "message" "type"
#
# Where "type" is "w" (warning), "e" (error), "d" (debug) or nothing
# for regular message.
#
# Note that direct writing to main log causes mistimings as task logs 
# are imported to main log after tasks are finished. But it can be 
# useful for debugging.
#
# Users can be notified using notify() function (requires libnotify).
# First argument is message, second is title (optional):
#
#    notify "my message" "my title"
# 
# Task exit code must be returned directly. For example:
#
#    backup-command
#    return $?
#
# Any non-zero value indicates error.


# This event runs at startup (not before each task).
# Can be skipped using "--skip" switch.
#
initialize() {
	return 0
}

# Daily task: "-d|--daily"
#
daily() {
	return 0
}

# Weekly task: "-w|--weekly"
#
weekly() {
	return 0
}

# Monthly task: "-m|--monthly"
#
monthly() {
	return 0
}

# Manual task: "-n|--manual"
#
manual() {
	return 0
}

# Syncronize task: "-s|--sync"
#
synchronize() {
	return 0
}

# Custom task: "-c|--custom"
#
# Place here commands to do something special (yearly or hourly backup,
# for example).
#
custom() {
	return 0
}

# This event runs at exit (not after each task).
# Can be skipped using "--skip" switch.
# Always executed in the end, even if there were errors (if not
# skipped).
#
finalize() {
	return 0
}

# EOF
